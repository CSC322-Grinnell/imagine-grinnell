{"version":3,"file":"js/home-pack-0de72e881fe41afed1e0.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/google.js","webpack:///./app/javascript/home.js","webpack:///./app/javascript/misc.js","webpack:///./app/javascript/packs/home-pack.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/home-pack.js\");\n","// Executes $callback passing a pointer to the google object after the google object is loaded\n// The argument, then, should be a function that takes the google object as an argument.\n// Example call:\n//   withGoogle((google) => google.maps.show());\n// Waiting for the entire window to load is probably kinda slow, this should probably be replaced with a callback for when the specific google maps script is loaded.\n// The cleanest way to handle this would be to grab the script ahead of time and include it in the webpack bundle, but that also proved problematic.\nexport function withGoogle(callback) {\n  window.addEventListener('load', () => {\n    callback(window.google);\n  });\n}\n","import {getJSON} from 'misc';\n\nexport function initMap(google) {\n  // Styles a map in night mode.\n  const map = new google.maps.Map(document.getElementById('map'), {\n    center: {lat: 41.743611, lng: -92.724722},\n    zoom: 14,\n    disableDefaultUI: true,\n    styles: [\n      {\n        'featureType': 'administrative',\n        'stylers': [\n          {\n            'saturation': '-100'\n          }\n        ]\n      },\n      {\n        'featureType': 'administrative.province',\n        'stylers': [\n          {\n            'visibility': 'off'\n          }\n        ]\n      },\n      {\n        'featureType': 'landscape',\n        'stylers': [\n          {\n            'saturation': -100\n          },\n          {\n            'lightness': 65\n          },\n          {\n            'visibility': 'on'\n          }\n        ]\n      },\n      {\n        'featureType': 'poi',\n        'stylers': [\n          {\n            'saturation': -100\n          },\n          {\n            'lightness': '50'\n          },\n          {\n            'visibility': 'simplified'\n          }\n        ]\n      },\n      {\n        'featureType': 'poi',\n        'elementType': 'labels.icon',\n        'stylers': [\n          {\n            'visibility': 'off'\n          }\n        ]\n      },\n      {\n        'featureType': 'poi.business',\n        'stylers': [\n          {\n            'visibility': 'simplified'\n          }\n        ]\n      },\n      {\n        'featureType': 'poi.business',\n        'elementType': 'labels.icon',\n        'stylers': [\n          {\n            'visibility': 'off'\n          }\n        ]\n      },\n      {\n        'featureType': 'road',\n        'stylers': [\n          {\n            'saturation': '-100'\n          }\n        ]\n      },\n      {\n        'featureType': 'road.arterial',\n        'stylers': [\n          {\n            'lightness': '30'\n          }\n        ]\n      },\n      {\n        'featureType': 'road.highway',\n        'stylers': [\n          {\n            'visibility': 'simplified'\n          }\n        ]\n      },\n      {\n        'featureType': 'road.local',\n        'stylers': [\n          {\n            'lightness': '40'\n          }\n        ]\n      },\n      {\n        'featureType': 'transit',\n        'stylers': [\n          {\n            'saturation': -100\n          }\n        ]\n      },\n      {\n        'featureType': 'water',\n        'elementType': 'geometry',\n        'stylers': [\n          {\n            'hue': '#ffff00'\n          },\n          {\n            'saturation': -97\n          },\n          {\n            'lightness': -25\n          }\n        ]\n      },\n      {\n        'featureType': 'water',\n        'elementType': 'labels',\n        'stylers': [\n          {\n            'saturation': -100\n          },\n          {\n            'lightness': -25\n          }\n        ]\n      }\n    ]\n  });\n\n  const infowindow = new google.maps.InfoWindow();\n\n  getJSON('./gardens', (data) => {\n    const gardens = [...Array(data.length)].map(_ => Array(4));\n    for (let i = 0; i < data.length; i++) {\n      gardens[i][0] = data[i].name;\n      gardens[i][1] = data[i].lat;\n      gardens[i][2] = data[i].long;\n      gardens[i][3] = `\n        <div class=\"card z-depth-0\" style=\"width: 100%;\">\n          <div class=\"card-image\">\n            <img src=\"${data[i].image}\">\n            <span class=\"card-title\">\n              ${data[i].name}\n            </span>\n          </div>\n          <div class=\"card-content\">\n            <p>${data[i].contact_name}</p>\n            <p> ${data[i].contact_number}</p>\n            <p>${data[i].address}</p>\n            <ul id=garden_id ${data[i].id} class=\"collection\"></ul>\n          </div>\n        </div>`;\n\n      const marker = new google.maps.Marker({\n        position: new google.maps.LatLng(gardens[i][1], gardens[i][2]),\n        title: gardens[i][0],\n        map: map\n      });\n      google.maps.event.addListener(marker, 'click', (function(marker, i) {\n        return function() {\n          infowindow.setContent(gardens[i][3]);\n          infowindow.open(map, marker);\n          populate_produces();\n        };\n      })(marker, i));\n    }\n  }, (_) => {\n    alert('Something went wrong.');\n  });\n}\n\nexport function populate_produces() {\n  getJSON('./garden_produces', (data) => {\n    for (let i = 0; i <= data.length - 1; i++) {\n      try {\n        document.getElementById(`garden_id${  data[i].garden_id}`).innerHTML += `\n          <li class=\"collection-item light-green lighten-${(3 - data[i].readiness)}\">\n            <span class=\"produce_id${data[i].produce_id}\"></span>,\n            ${data[i].available_at}\n          </li>`;\n      } catch (exception) {\n        // pass\n      }\n    }\n    getJSON('./produces', (data) => {\n      for (let i = 0; i <= data.length - 1; i++) {\n        const elements = document.getElementsByClassName(`produce_id${i}`);\n        for (let j = 0; j < elements.length; j++) {\n          elements[j].innerHTML += data[i].name;\n        }\n      }\n    }, (_) => {\n      alert('Something went wrong.');\n    });\n  }, (_) => {\n    alert('Something went wrong.');\n  });\n}\n","export function getJSON(url, successHandler, errorHandler) {\n  const xhr = typeof XMLHttpRequest !== 'undefined'\n    ? new XMLHttpRequest()\n    : new ActiveXObject('Microsoft.XMLHTTP'); // eslint-disable-line no-undef\n  xhr.open('get', url, true);\n  xhr.onreadystatechange = function() {\n    let status;\n    let data;\n    // https://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate\n    if (xhr.readyState === 4) { // `DONE`\n      status = xhr.status;\n      if (status === 200) {\n        data = JSON.parse(xhr.responseText);\n        successHandler && successHandler(data);\n      } else {\n        errorHandler && errorHandler(status);\n      }\n    }\n  };\n  xhr.send();\n}\n","/* eslint no-console:0 */\n// This file (and any others in this directory) serves as an entrypoint for application\n// javascript.\n// You should probably put application logic in other files, and then import things here\n// and make one or two function calls.\n// You're therefore encouraged to place your actual application logic in\n// a relevant structure within app/javascript and only use these pack files to reference\n// that code so it'll be compiled.\n//\n// To reference this file, add <%= javascript_pack_tag 'home-application' %> to the appropriate\n// layout file, like app/views/layouts/application.html.erb\n\n// Uncomment to copy all static images under ../images to the output folder and reference\n// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)\n// or the `imagePath` JavaScript helper below.\n//\n// const images = require.context('../images', true)\n// const imagePath = (name) => images(name, true)\nimport {initMap, populate_produces} from '../home';\nimport {withGoogle} from '../google';\nwithGoogle((google) => {\n  initMap(google);\n  populate_produces();\n});\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AATA;AAeA;AACA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AATA;AAeA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AAEA;AADA;AAHA;AASA;AACA;AACA;AAEA;AADA;AAJA;AAUA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AAEA;AADA;AAHA;AASA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAIA;AADA;AAVA;AAgBA;AACA;AACA;AAEA;AADA;AAIA;AADA;AAPA;AAlIA;AAiJA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAgBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzNA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}